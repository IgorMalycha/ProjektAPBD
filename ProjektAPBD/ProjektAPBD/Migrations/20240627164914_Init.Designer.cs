// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektAPBD.Context;

#nullable disable

namespace ProjektAPBD.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240627164914_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjektAPBD.Models.Agreement", b =>
                {
                    b.Property<int>("AgreementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgreementId"));

                    b.Property<int>("ActualizationYears")
                        .HasColumnType("int");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IndividualClientId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal>("Payment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Signed")
                        .HasColumnType("bit");

                    b.Property<int>("SoftwareId")
                        .HasColumnType("int");

                    b.Property<string>("SoftwareVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgreementId");

                    b.HasIndex("CompanyClientId");

                    b.HasIndex("IndividualClientId");

                    b.HasIndex("SoftwareId");

                    b.ToTable("Agreements");
                });

            modelBuilder.Entity("ProjektAPBD.Models.CompanyClient", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KRSNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("CompanyId");

                    b.ToTable("CompanyClients");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            Address = "AdresCKlienta1",
                            CompanyName = "KowalskispZoo",
                            Email = "malpa@wp.pl",
                            KRSNumber = "12345678",
                            PhoneNumber = 123456789
                        });
                });

            modelBuilder.Entity("ProjektAPBD.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("DiscountId");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            DiscountId = 1,
                            DateFrom = new DateTime(2024, 6, 26, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2023, 7, 27, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Whitethursday",
                            Value = 5
                        });
                });

            modelBuilder.Entity("ProjektAPBD.Models.IndividualClient", b =>
                {
                    b.Property<int>("IndividualPersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IndividualPersonId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IndividualPersonId");

                    b.ToTable("IndividualClients");

                    b.HasData(
                        new
                        {
                            IndividualPersonId = 1,
                            Address = "AdresIKlienta1",
                            Email = "malpainna@wp.pl",
                            FirstName = "Jan",
                            IsDeleted = false,
                            Pesel = "03333333333",
                            PhoneNumber = 111456789,
                            SecondName = "Kowalski"
                        });
                });

            modelBuilder.Entity("ProjektAPBD.Models.Software", b =>
                {
                    b.Property<int>("SoftwareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsBoughtInOneTransaction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubscription")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoftwareCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SoftwareId");

                    b.HasIndex("SoftwareCategoryId");

                    b.ToTable("Softwares");

                    b.HasData(
                        new
                        {
                            SoftwareId = 1,
                            Description = "description",
                            IsBoughtInOneTransaction = true,
                            IsSubscription = false,
                            Name = "opraogramowanieChad",
                            Price = 1000m,
                            SoftwareCategoryId = 1,
                            Version = "3.14"
                        });
                });

            modelBuilder.Entity("ProjektAPBD.Models.SoftwareCategory", b =>
                {
                    b.Property<int>("SoftwareCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareCategoryId"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SoftwareCategoryId");

                    b.ToTable("SoftwareCategories");

                    b.HasData(
                        new
                        {
                            SoftwareCategoryId = 1,
                            Type = "finanse"
                        });
                });

            modelBuilder.Entity("ProjektAPBD.Models.SoftwareDiscount", b =>
                {
                    b.Property<int>("SoftwareDiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareDiscountId"));

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareId")
                        .HasColumnType("int");

                    b.HasKey("SoftwareDiscountId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("SoftwareId");

                    b.ToTable("Software_Discount");

                    b.HasData(
                        new
                        {
                            SoftwareDiscountId = 1,
                            DiscountId = 1,
                            SoftwareId = 1
                        });
                });

            modelBuilder.Entity("ProjektAPBD.Models.Agreement", b =>
                {
                    b.HasOne("ProjektAPBD.Models.CompanyClient", "CompanyClient")
                        .WithMany("Agreements")
                        .HasForeignKey("CompanyClientId");

                    b.HasOne("ProjektAPBD.Models.IndividualClient", "IndividualClient")
                        .WithMany("Agreements")
                        .HasForeignKey("IndividualClientId");

                    b.HasOne("ProjektAPBD.Models.Software", "Software")
                        .WithMany("Agreements")
                        .HasForeignKey("SoftwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyClient");

                    b.Navigation("IndividualClient");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("ProjektAPBD.Models.Software", b =>
                {
                    b.HasOne("ProjektAPBD.Models.SoftwareCategory", "SoftwareCategory")
                        .WithMany("Softwares")
                        .HasForeignKey("SoftwareCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SoftwareCategory");
                });

            modelBuilder.Entity("ProjektAPBD.Models.SoftwareDiscount", b =>
                {
                    b.HasOne("ProjektAPBD.Models.Discount", "Discount")
                        .WithMany("AgreementDiscounts")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektAPBD.Models.Software", "Software")
                        .WithMany("SoftwareDiscounts")
                        .HasForeignKey("SoftwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("ProjektAPBD.Models.CompanyClient", b =>
                {
                    b.Navigation("Agreements");
                });

            modelBuilder.Entity("ProjektAPBD.Models.Discount", b =>
                {
                    b.Navigation("AgreementDiscounts");
                });

            modelBuilder.Entity("ProjektAPBD.Models.IndividualClient", b =>
                {
                    b.Navigation("Agreements");
                });

            modelBuilder.Entity("ProjektAPBD.Models.Software", b =>
                {
                    b.Navigation("Agreements");

                    b.Navigation("SoftwareDiscounts");
                });

            modelBuilder.Entity("ProjektAPBD.Models.SoftwareCategory", b =>
                {
                    b.Navigation("Softwares");
                });
#pragma warning restore 612, 618
        }
    }
}
